// DOM에 화면이 그려지는지 체크하는 방법

useEffect(() => {
  if (_.isEmpty(data)) {
    openLoading(); // 로딩바 ON
  }
  const observer = new MutationObserver(() => {
    closeLoading(); // 로딩바 OFF
  });

  // 감지할 속성들
  const config = {
      childList: true,           // 자식 노드 추가/제거, true로 설정하면 자식 노드가 추가되거나 제거될 때 감지합니다.
      attributes: true,          // 속성 변경, true로 설정하면 속성(attribute)이 추가되거나 제거되거나 변경될 때 감지합니다.
      characterData: true,       // 텍스트 노드 변경, true로 설정하면 텍스트 노드의 변경을 감지합니다.
      subtree: true,             // 후손 노드 변화를 포함, true로 설정하면 지정한 요소뿐만 아니라 모든 후손 노드에서의 변화를 감지합니다.
      attributeOldValue: true,   // 속성 변경 이전 값 기록, true로 설정하면 속성의 이전 값을 기록합니다. attributes가 true일 때만 유효합니다.
      characterDataOldValue: true, // 텍스트 노드 변경 이전 값 기록, true로 설정하면 텍스트 노드의 이전 값을 기록합니다. characterData가 true일 때만 유효합니다.
      attributeFilter: ['class', 'style'] // 감지할 속성 목록, 특정 속성만 감지하도록 속성의 배열을 전달합니다. 이 배열에 포함된 속성만 감지합니다.
  };

  if (tableRef.current) {
    observer.observe(tableRef.current, {
      childList: true
    });
  }

  return () => {
    observer.disconnect(); // 감시 중지
  };
}, [data]);
